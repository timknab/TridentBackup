#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set purge_type = params.PURGE|default("KAMP")|string %}
    # Collecting variables
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% if printer.configfile.settings['beacon'].home_z_hop is defined %}
        {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['beacon'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% else %}
        {% set z_hop = printer.configfile.settings['safe_z_home'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['safe_z_home'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['safe_z_home'].home_z_hop_speed|float %}
    {% endif %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON_VARS"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON_VARS"].adaptive_mesh|default(false) %}

    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    {% if printer.toolhead.homed_axes != "xy" %}
        G28 XY                                                                                     # Partial home (XY)
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}
    G90                                                                                         # Absolute positioning

    BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
        M106 S255                                                                               # Turns on the Part cooling fans

        {% if printer.configfile.settings["output_pin nevermore"] is defined %}
            SET_PIN PIN=nevermore VALUE=1                                                       # Turns on nevermore if setup
        {% endif %}

        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        {% if printer.configfile.config["temperature_sensor chamber"] is defined %}
            SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"                                  # Displays info
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}       # Waits for chamber to reach desired temp
        {% endif %}

	# If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        SET_DISPLAY_TEXT MSG="Soak for 1min"                                                    # Displays info
        G4 P60000.0                                                                           # Waits 5 min for the bedtemp to stabilize
    {% endif %}
	
	
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}
    
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    # If you don't change build plates then you may remove this by commenting it out
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot
    
    {% if printer.z_tilt_ng is defined and not printer.z_tilt_ng.applied %}
        SET_DISPLAY_TEXT MSG="Z-tilt adjust"                                                    # Displays info
        SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
        # STATUS_LEVELING                                      # Set LEDs to leveling-mode
        Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
        G28 Z                                                                                   # Homes Z again after z_tilt_adjust
    {% endif %}

    {% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
        SET_DISPLAY_TEXT MSG="QGL"                                                              # Displays info
        {% if printer.configfile.config["gcode_macro FAST_QGL"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_QGL                                                                        # Levels the buildplate via QGL but FASTER
            {% endif %}
        {% else %}
            quad_gantry_level                                                                   # Levels the buildplate via QGL
        {% endif %}
        G28 Z                                                                                   # Homes Z again after QGL
    {% endif %}

    ##  comment if you want to load a previous mesh
    SET_DISPLAY_TEXT MSG="Bed mesh"                                                             # Displays info
    {% if adaptive_meshing %}
        bed_mesh_calibrate RUNS=2                                                    # Runs an adaptive bed mesh
    {% else %}
        bed_mesh_calibrate RUNS=2                                                                      # Runs a bed mesh 
    {% endif %}

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}

    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"                                           # Displays info 
    {% if printer.configfile.config["gcode_macro SMART_PARK"] is defined %}
        SMART_PARK                                                                              # Parks using KAMP
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}

	M107                                                                                        # Turns off partcooling fan
    M109 S{target_extruder}                                                                     # Heats the nozzle to printing temp
    
    {% if printer.configfile.config["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}

    SET_GCODE_OFFSET Z_ADJUST=0                                                                 # Apply any additional offset u wish to apply
    SKEW_PROFILE LOAD=my_skew_profile
    # Gets ready to print by doing a purge line
    SET_DISPLAY_TEXT MSG="Printer goes brr"                                                     # Displays info
    {% if purge_type == 'BLOB' %}
        RESPOND MSG="BLOB PURGE"
        PURGE_BLOB
    {% elif printer.configfile.config["gcode_macro PURGE_NOZZLE"] is defined %}
        PURGE_NOZZLE                                                                            # Purges the nozzle via macro if setup
    {% elif printer.configfile.config["gcode_macro LINE_PURGE"] is defined %}
        LINE_PURGE                                                                              # Purges the nozzle using KAMP adaptive purging if setup
    {% elif printer.configfile.config["gcode_macro VORON_PURGE"] is defined %}
        VORON_PURGE                                                                             # Purges the nozzle using KAMP adaptive purging if setup
    {% endif %}
   
    G90                                                                                         # Absolute positioning


[gcode_macro PRINT_END]
  #   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
  gcode:
      # safe anti-stringing move coords
      {% set th = printer.toolhead %}
      {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
      {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
      {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
      
      SAVE_GCODE_STATE NAME=STATE_PRINT_END

      M400                           ; wait for buffer to clear
      G92 E0                         ; zero the extruder
      G1 E-5.0 F1800                 ; retract filament
      
      TURN_OFF_HEATERS

      G90                                      ; absolute positioning
      G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
      # G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
      G0 X{th.axis_maximum.x//2} Y{th.axis_minimum.y + 10} F3600  ; park nozzle at front
      M107                                     ; turn off fan
      
      BED_MESH_CLEAR

      # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
      # command pair is to restore the printer's coordinate system
      # and speed settings since the commands above change them.
      # However, to prevent any accidental, unintentional toolhead
      # moves when restoring the state, explicitly set MOVE=0.
      SET_SKEW CLEAR=1
      RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


# In order to use this you need to increase max_extrude_cross_section in your extruder config or klipper will complain. I set mine to 30
[gcode_macro PURGE_BLOB]
gcode:
    # This is for a 300mm bed. If you have a diferent bed size you may want to adjust the line below
    {% set rand_pos = (120 + ( printer.system_stats.cputime * 1000 ) % 60) %}           ; Generate pseudo random start pos so we dont wear out that one spot on the bed. 
    M117 Purging at X{ rand_pos }                                                       
    
    # The start pos will be within the "handle" of the flex plate where there is some extra Y space available so we can go all the way to Y0
    # If your setup does not have this extra space then just increase the y valie in the line "G1 X{ rand_pos } Y0 Z1 F18000"
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    G1 X{ rand_pos } Y10 Z1 F18000   ; Go to start pos for perge line
    G1 Z0.4 F600                    ; Lower to purge height
    G91                             ; relative positioning
    G1 X5 E40 F40                   ; Extrude blob of filament on the bed
    M106 P0                         ; Enable Cooling Fan
    G1 X20 Z5 F100                  ; Slow drag away from the blob with fans helping cool and break strings. Also raiz z zo the blob clears the fan duct
    G1 X5  Z-5.1 F9000              ; Now that the blob has cleared the duct we go back down for a short 0.3mm height extrusion
    G1 X5 E2 F180                   ; Slow 5mm extrude move to help with stringing
    G1 X30 E-1 F6000                ; Fast move and retract to break strings and reduce ooze
    G1 Z1 F100                      ; Lift
    M106 P0 S0                      ; Disable Cooling Fan
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning